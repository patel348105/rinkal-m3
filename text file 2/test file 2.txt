ex:-1 #What is List? How will you reverse a list?#
ans:a number of connected items or names written or printed consecutively, 
    typically one.
    reverse() is a list data type method that reverses the elements of the list in-place. This method modifies the
    original list rather than creating a new one.
The syntax of the reverse() method is as follows:
list.reverse()

******************************************************************************************************************************************

ex:2 #How will you remove last object from a list?#
ans:-we can use 3 different methods to remove an object from a list in Python. They are remove, del and pop.
The remove method removes the first value matching the argument to remove from the list, not a specific index. 
The del method removes a specific index from the list. 
The pop method returns the removed element. The argument to pop is the index you want to remove.

*******************************************************************************************************************************************
ex:3 #suppose list1 is[2,33,222,14,and25],what is list[-1]?#
list1=[2,33,222,14,25]
list1[-1]   

output:25

*******************************************************************************************************************************************

ex:4 #Differentiate between append () and extend () methods?#
Append
It adds an element at the end of the list. The argument passed in the append function is added as a single
element at end of the list and the length of the list is increased by 1.
Syntax:
list_name.append(elements)

extend():-
In Python, you can use the extend() method to add multiple elements to the end of a list.
Similar to the append() method, the extend() method modifies the original list.
syntax:
list.extend(elements)                

*******************************************************************************************************************************************
ex:5 #Write a Python function to get the largest number, smallest num and sum of all from a list.#
num=[17,10,5]

x=print(min(num))
y=print(max(num))

sum=0
for i in num:
    sum+=i
print(sum)

output:
5
17
32
*******************************************************************************************************************************************

ex:6 #How will you compare two lists?#
ans:-
set():- set is a sequence of items which does not allow reoeated values.
    it is an unodered sequence which can add only immutable data types.
    -set is representing by{}.
    
Using collections.Counter()
This method tests for the equality of the lists by comparing frequency of each 
element in first list with the second list. This method also does not take into account the
order of the elements of the list.

***************************************************************************************************************************************************

ex:7 #Write a Python program to count the number of strings where the string length is 2 or more and #
#the first and last character are same from a given list of strings.#
l1=['acds','dfr','kdhk','hgtf']
for x in l1:
    if len(x)>=2 and x[0]==x[len(x)-1]:
        print("same character: "+x)

output:same character: kdhk
******************************************************************************************************************************************************
ex:8 #Write a Python program to remove duplicates from a list.#
a=('red',34,23,'pink',34,'red')
l=list(a)
for i in l:
    if l.count(i)>1:
        l.remove(i)
a=(l)
a
 
output:
[23, 'pink', 34, 'red']
*******************************************************************************************************************************************
ex:9 #Write a Python program to check a list is empty or not#
l1=['python is easy']
if len(l1)==0:
    print("list is empty")
else:
    print("list is not empty")

output: list is not empty
*******************************************************************************************************************************************
ex:10 #Write a Python function that takes two lists and returns true if they have at least one common member.#
a = [1, 2, 3]
b = [5, 3, 7]
flag=0
for i in a:
    for j  in b:
        if i==j:
            flag=1
            break
if flag==1:
     print("True")
else:
    print("False")

output:True
*******************************************************************************************************************************************

ex:11 #Write a Python program to generate and print a list of first and last 5# 
#elements where the values are square of numbers between 1 and 30.#
l = list()
for i in range(1,30):
        l.append(i**2)
print(l[:5])
print(l[-5:])

output:[1, 4, 9, 16, 25]
[625, 676, 729, 784, 841]
*******************************************************************************************************************************************
ex:12 #Write a Python program to convert a list of characters into a string.#
name=['r','i','n','k','a','l']
''.join(name)

output: 'rinkal'
*******************************************************************************************************************************************
ex:13 #Write a Python program to split a list into different variables.#
s=[("rc","tc","vc"),("tcs","rtc","tcr"),("pc","md","rt")]
i1,i2,i3=s
print(i1)
print(i2)
print(i3)

output: ('rc', 'tc', 'vc')
('tcs', 'rtc', 'tcr')
('pc', 'md', 'rt')
*******************************************************************************************************************************************

ex:14 #What is tuple? Difference between list and tuple.#
ans:-
A tuple (pronounced tuh-pul) is a data structure in some programming languages that is an ordered list of elements.
A tuple may include zero or more elements. To indicate how many elements it contains, it may be called
an n-tuple, where "n" is the number of elements.Often, a tuple is represented as a comma-delimited list
of the elements, enclosed in parentheses. For example, "(5, 9, 11, 3, 22, 14)" is a "6-tuple."
list:	Lists are mutable.The implication of iterations is Time-consuming.Lists consume more memory.Lists have several 
    built-in methods.
tuple:-Tuples are immutable.The implication of iterations is comparatively Faster.Tuple data type is appropriate for 
    accessing the elements.Tuple consumes less memory as compared to the list.
*******************************************************************************************************************************************
ex:15 #Write a Python program to create a tuple with different data types.#
data=('black',34,True,55.2,'rinkal')
data

output:('black', 34, True, 55.2, 'rinkal')
*******************************************************************************************************************************************
ex:16 #Write a Python program to create a tuple with numbers.#
num=(12,4,70,43,56)
num
output:(12, 4, 70, 43, 56)

#Write a Python program to convert a tuple to a string.#
name=('p','y','t','h','o','n','i','s','e','a','s','y')
''.join(name)

output:'pythoniseasy'
*******************************************************************************************************************************************

ex:17 #Write a Python program to check whether an element exists within a tuple.#
l1=('hello python')
i= 'k'
if i in l1:
    print('exists')
else:
 
print('not exists')

output: not exists
*******************************************************************************************************************************************

ex:18 #Write a Python program to find the length of a tuple.#
s=('first is a number')
len(s)

output: 17
*******************************************************************************************************************************************
ex:19 #Write a Python program to convert a list to a tuple.#
a=['red',34,23,'pink',5,['abc',45.9]]
b=tuple(a)
b

output:('red', 34, 23, 'pink', 5, ['abc', 45.9])
*******************************************************************************************************************************************
ex:20 #Write a Python program to reverse a tuple.#
st=(12,43,67,89,55.43)
tuple=st[::-1]
tuple

output: (55.43, 89, 67, 43, 12)
*******************************************************************************************************************************************
ex:21 #Write a Python program to replace last value of tuples in a list.#
l=['red',34,23,'pink',5]
l[-1]='false'
l=tuple(l)
l

output:('red', 34, 23, 'pink', 'false')
*******************************************************************************************************************************************
ex:22 #Write a Python program to find the repeated items of a tuple.#
s=(2,"rit",5,7,2,9,13,"tcs","rit")
for i in s:
     if s.count(i)>1:
        print(f"Repeated",(i))

output:Repeated 2
Repeated rit
Repeated 2
Repeated rit
*******************************************************************************************************************************************

ex:23 #Write a Python program to unzip a list of tuples into individual lists.#

l = [(1,2), (3,4), (8,9)]
print(list(zip(*l)))

output:[(1, 3, 8), (2, 4, 9)]
*******************************************************************************************************************************************
ex:24 #Write a Python program to convert a list of tuples into a dictionary.#

t=[('key1',1),('key2',2),('key3',3)]
z = dict(t)
print(z)

output:{'key1': 1, 'key2': 2, 'key3': 3}
*******************************************************************************************************************************************

ex:25 #How will you create a dictionary using tuples in python?#
ans:
 To create a dictionary from list of tuples in Python, where each tuple is of the form (key, value),
pass the list of tuples as argument to dict () builtin function. In this example, 
we will give a list for tuples as argument to dict () function.
*******************************************************************************************************************************************
ex:26 #Write a Python script to sort (ascending and descending) a dictionary by value.#
l1=[56,89,65,14,25,37]
l2=[17,55,84,96,3,10]
l1.sort()
l2.sort(reverse=True)
l1
#l2
output:[14, 25, 37, 56, 65, 89]
*******************************************************************************************************************************************

ex:27 #Write a Python script to concatenate following dictionaries to create a new one.#
d1={1:3,'name':'rinkal','abc':55.43}
d2={'company':'TOPS'}
d1.update(d2)
d1

output:{1: 3, 'name': 'rinkal', 'abc': 55.43, 'company': 'TOPS'}

*******************************************************************************************************************************************
ex:28 #Write a Python script to check if a given key already exists in a dictionary#
d={1:3,'name':'rinkal','abc':55.43}

if i in d.keys():
    print("Present, ", end =" ")
    print("value =", d[key])
else:
    print("Not present")

output:Not present
*******************************************************************************************************************************************
ex:29 #How Do You Traverse Through A Dictionary Object In Python?#
ans:- 
    To iterate over Dictionary values in Python, get the dictionary values using dict.values () method and use 
a for loop on this values object to traverse through each value in the dictionary.
The following code snippet demonstrates how to iterate over values in a Python Dictionary.
*******************************************************************************************************************************************

#How Do You Check The Presence Of A Key In A Dictionary?#
d={1:3,'name':'rinkal','abc':55.43}
num='name'
if num in d.keys():
    print('key exist')
else:
    print('not exist')

output: key exist
*******************************************************************************************************************************************
























































































































































